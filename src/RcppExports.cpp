// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FitOLS
SEXP FitOLS(const arma::colvec y, const arma::mat X);
RcppExport SEXP _RNOmni_FitOLS(SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(FitOLS(y, X));
    return rcpp_result_gen;
END_RCPP
}
// MatIP
SEXP MatIP(const arma::mat A, const arma::mat B);
RcppExport SEXP _RNOmni_MatIP(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MatIP(A, B));
    return rcpp_result_gen;
END_RCPP
}
// MatInv
SEXP MatInv(const arma::mat A);
RcppExport SEXP _RNOmni_MatInv(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(MatInv(A));
    return rcpp_result_gen;
END_RCPP
}
// SchurC
SEXP SchurC(const arma::mat Ibb, const arma::mat Iaa, const arma::mat Iba);
RcppExport SEXP _RNOmni_SchurC(SEXP IbbSEXP, SEXP IaaSEXP, SEXP IbaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type Ibb(IbbSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Iaa(IaaSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Iba(IbaSEXP);
    rcpp_result_gen = Rcpp::wrap(SchurC(Ibb, Iaa, Iba));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RNOmni_FitOLS", (DL_FUNC) &_RNOmni_FitOLS, 2},
    {"_RNOmni_MatIP", (DL_FUNC) &_RNOmni_MatIP, 2},
    {"_RNOmni_MatInv", (DL_FUNC) &_RNOmni_MatInv, 1},
    {"_RNOmni_SchurC", (DL_FUNC) &_RNOmni_SchurC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RNOmni(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
